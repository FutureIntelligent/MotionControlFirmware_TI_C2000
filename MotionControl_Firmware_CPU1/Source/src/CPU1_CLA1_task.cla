
#include "CPU1_CLA1_common.h"
#include "F28x_Project.h"

__interrupt void Cla1Task1 ( void )
{
  // count CLA execution time
  RESTART_CLOCK;

  Cla1SoftIntRegs.SOFTINTEN.bit.TASK1 = 1;

  AdcaRegs.ADCINTFLGCLR.bit.ADCINT1 = 1;
  CLA_SampleBufferA[CLA_SampleCounter] = AdcaResultRegs.ADCRESULT0;
  CLA_SampleBufferB[CLA_SampleCounter++] = AdcaResultRegs.ADCRESULT0;

  if(CLA_SampleCounter==20){
    CLA_SampleCounter = 0;
  }

  if(CLA_CycleCounter==9){
    CLA_CycleCounter = 0;
    CLA_SampleBufferActiveHalf = (~CLA_SampleBufferActiveHalf) & 0x0001;
    Cla1SoftIntRegs.SOFTINTFRC.bit.TASK1 = 1;
  } else {
    CLA_CycleCounter += 1;
  }

  switch(CLA_CycleCounter){
    case 0:
      break;
    case 1:
      break;
    case 3:
      break;
    case 4:
      break;
    case 5:
      break;
    case 6:
      break;
    case 7:
      break;
    case 8:
      break;
    case 9:
      break;
    default:
      break;
  }

  READ_CLOCK(timeCounter);
}

__interrupt void Cla1Task2 ( void )
{

}

__interrupt void Cla1Task3 ( void )
{

}

__interrupt void Cla1Task4 ( void )
{

}

__interrupt void Cla1Task5 ( void )
{

}

__interrupt void Cla1Task6 ( void )
{

}

__interrupt void Cla1Task7 ( void )
{

}

/**
 *  task 8 is used to initialize CLA variables
 */
__interrupt void Cla1Task8 ( void )
{

}
